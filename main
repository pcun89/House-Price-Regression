#include <stddef.h>

// Replace these with numbers from embedded_model.json
const size_t N_FEATURES = 8;
const float means[8] = { /* fill from json: scaler.mean_.tolist() */ };
const float scales[8] = { /* fill from json: scaler.scale_.tolist() */ };
const float coef[8] = { /* fill from json: model.coef_.tolist() */ };
const float intercept = /* fill from json: model.intercept_.item() */;

// Normalize feature in place: (x - mean) / scale
static inline void normalize_features(float *x) {
    for (size_t i = 0; i < N_FEATURES; ++i) {
        x[i] = (x[i] - means[i]) / (scales[i] == 0.0f ? 1.0f : scales[i]);
    }
}
